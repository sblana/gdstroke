#ifndef CONTOUR_BUFFERS_GLSLI
#define CONTOUR_BUFFERS_GLSLI

#include "common/sanity.glsli"

#define MAX_NUM_CONTOUR_FRAGMENTS (1 << 20)
#define MAX_NUM_CONTOUR_PIXELS    (1 << 20)

layout(set = 3, binding = 0, std430) RESTRICT buffer ContourDescBuffer {
	int num_contour_edges;
	int buf_len_contour_edges;

	int num_contour_fragments;
	int buf_len_contour_fragments;

	int num_contour_pixels;
	int buf_len_contour_pixels;
} B_contour_desc;

layout(set = 3, binding = 1, std430) RESTRICT buffer ContourEdgeToEdgeBuffer {
	int idx[]
	/* length of array is equal to B_mesh_desc.num_edges */;
} B_contour_edge_to_edge;

struct ContourEdgeToContourFragmentData {
	int num_fragments;
	int first_fragment_idx;
};

layout(set = 3, binding = 2, std430) RESTRICT buffer ContourEdgeToContourFragmentBuffer {
	ContourEdgeToContourFragmentData data[];
} B_contour_edge_to_contour_fragment;


layout(set = 3, binding = 3, std430) RESTRICT buffer ContourFragmentPixelCoordBuffer {
	ivec2 pixel_coord[MAX_NUM_CONTOUR_FRAGMENTS];
} B_contour_fragment_pixel_coord;

layout(set = 3, binding = 4, std430) RESTRICT buffer ContourFragmentOrientationBuffer {
	vec2 orientation[MAX_NUM_CONTOUR_FRAGMENTS];
} B_contour_fragment_orientation;

layout(set = 3, binding = 5, std430) RESTRICT buffer ContourFragmentNormalDepthBuffer {
	vec4 normal_depth[MAX_NUM_CONTOUR_FRAGMENTS];
} B_contour_fragment_normal_depth;

layout(set = 3, binding = 6, std430) RESTRICT buffer ContourFragmentPseudoVisibleBuffer {
	bool pseudo_visible[MAX_NUM_CONTOUR_FRAGMENTS];
} B_contour_fragment_pseudo_visible;

layout(set = 3, binding = 7) uniform sampler2D U_screen_depth_texture;

layout(set = 3, binding = 8, r32ui) RESTRICT uniform uimage2D U_contour_bitmap;


struct AllocationContourPixelData {
	uint is_fragment_cluster_leader;
	uint contour_pixel_idx;
};

layout(set = 3, binding = 9, std430) RESTRICT buffer AllocationContourPixelBuffer {
	AllocationContourPixelData data[MAX_NUM_CONTOUR_FRAGMENTS];
} B_allocation_contour_pixel;


// layout(set = 3, binding = 10, std430) RESTRICT buffer ContourPixelPixelCoordBuffer {
// 	ivec2 pixel_coord[MAX_NUM_CONTOUR_FRAGMENTS];
// } B_contour_pixel_pixel_coord;

// layout(set = 3, binding = 11, std430) RESTRICT buffer ContourPixelOrientationBuffer {
// 	vec2 orientation[MAX_NUM_CONTOUR_FRAGMENTS];
// } B_contour_pixel_orientation;

// layout(set = 3, binding = 12, std430) RESTRICT buffer ContourPixelNormalDepthBuffer {
// 	vec4 normal_depth[MAX_NUM_CONTOUR_FRAGMENTS];
// } B_contour_pixel_normal_depth;

#endif // !CONTOUR_BUFFERS_GLSLI
