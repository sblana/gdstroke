#version 450
#extension GL_ARB_shading_language_include : enable

layout(local_size_x = 64) in;

#include "common/buffers.glsli"

void main() {
	const uint pixel_edge_idx = gl_GlobalInvocationID.x;

	if (pixel_edge_idx < B_pixel_edge_desc.buf_len_sparse_pixel_edge) {
		const SparsePixelEdgeNeighboursData neighbours = B_sparse_pixel_edge_neighbours.data[pixel_edge_idx];

		if (neighbours != SparsePixelEdgeNeighboursData(-1, -1)) {
			const int associated_head_idx = B_sparse_pixel_edge_associated_head.associated_head[pixel_edge_idx];
			const int pixel_edge_loop_idx = B_sparse_pixel_edge_to_pixel_edge_loop.idx[associated_head_idx];
			const int local_idx = B_sparse_pixel_edge_local_idx.local_idx[pixel_edge_idx];
			const PixelEdgeLoopDescData loop_desc = B_pixel_edge_loop_desc.data[pixel_edge_loop_idx];

			const int compacted_pixel_edge_idx = loop_desc.compacted_head_idx + local_idx;
			const int compacted_prev_idx = loop_desc.compacted_head_idx + B_sparse_pixel_edge_local_idx.local_idx[neighbours.prev_idx];
			const int contour_pixel_idx = int(get_sparse_pixel_edge_contour_pixel_idx(pixel_edge_idx));
			const PixelEdgeOrientation orientation = get_sparse_pixel_edge_orientation(pixel_edge_idx);
			const int compacted_next_idx = loop_desc.compacted_head_idx + B_sparse_pixel_edge_local_idx.local_idx[neighbours.next_idx];

			B_compacted_pixel_edge_neighbours.data[compacted_pixel_edge_idx] = CompactedPixelEdgeNeighboursData(compacted_prev_idx, compacted_next_idx);

			B_compacted_pixel_edge_to_contour_pixel.contour_pixel_idx[compacted_pixel_edge_idx] = contour_pixel_idx;
			B_compacted_pixel_edge_orientation.orientation[compacted_pixel_edge_idx] = orientation;

			B_compacted_pixel_edge_associated_head.associated_head[compacted_pixel_edge_idx] = loop_desc.compacted_head_idx;
		}
	}
}
