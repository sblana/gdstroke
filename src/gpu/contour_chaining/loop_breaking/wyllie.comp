#version 450
#extension GL_ARB_shading_language_include : enable

layout(local_size_x = 64) in;

#include "common/buffers.glsli"


layout(push_constant) RESTRICT readonly uniform PushConstants {
	int  read_layer;
	int write_layer;
} U_push_constants;

void main() {
	const uint pixel_edge_idx = gl_GlobalInvocationID.x;
	if (pixel_edge_idx < B_pixel_edge_desc.buf_len_sparse_pixel_edge) {
		const SparsePixelEdgeNeighboursData neighbours = B_sparse_pixel_edge_neighbours.data[pixel_edge_idx];
		if (neighbours != SparsePixelEdgeNeighboursData(-1, -1)) {
			const WyllieData curr_wd = B_sparse_pixel_edge_loop_breaking.data[pixel_edge_idx].wd[U_push_constants.read_layer];
			WyllieData next_wd = curr_wd;

			if (curr_wd.next_idx == -1) {
				B_sparse_pixel_edge_loop_breaking.data[pixel_edge_idx].wd[U_push_constants.write_layer] = curr_wd;
				return;
			}

			if (B_sparse_pixel_edge_loop_breaking.data[curr_wd.next_idx].wd[U_push_constants.read_layer].sort_value > curr_wd.sort_value) {
				next_wd = B_sparse_pixel_edge_loop_breaking.data[curr_wd.next_idx].wd[U_push_constants.read_layer];
			}
			next_wd.next_idx = B_sparse_pixel_edge_loop_breaking.data[curr_wd.next_idx].wd[U_push_constants.read_layer].next_idx;

			B_sparse_pixel_edge_loop_breaking.data[pixel_edge_idx].wd[U_push_constants.write_layer] = next_wd;
		}
	}
}
